{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","LENGTH","sort","a","b","length","ALPABET","localeCompare","reverse","App","state","NONE","handleSort","setState","handleReverse","this","isIntialState","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,OACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UACzC,MAEF,KAAKX,EAASY,QACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,cAAcH,MAUhD,OAJIL,GACFC,EAAaQ,UAGRR,G,SAjCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAyCE,IAAMe,EAAb,4MACEC,MAAyB,CACvBX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,EAMEC,WAAa,SAACd,GACZ,EAAKe,SAAS,CAAEf,cAPpB,EAUEgB,cAAgB,WACd,EAAKD,UAAS,SAACH,GAAD,MAAY,CACxBX,YAAaW,EAAMX,gBAZzB,4CAgBE,WAA2B,IAAD,OACxB,EAAiCgB,KAAKL,MAA9BZ,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAEZiB,EAAiBlB,IAAaJ,EAASiB,OACvCZ,EAEN,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYJ,KAAKL,MAAMZ,WAAaJ,EAASY,UAE/Cc,QAAS,kBAAM,EAAKR,WAAWlB,EAASY,UAL1C,iCAUA,wBACEY,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYJ,KAAKL,MAAMZ,WAAaJ,EAASO,SAE/CmB,QAAS,kBAAM,EAAKR,WAAWlB,EAASO,SAL1C,4BAUA,wBACEiB,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAaJ,KAAKL,MAAMX,aAE1BqB,QAASL,KAAKD,cALhB,sBAUEE,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACP,EAAKP,SAAS,CAAEf,SAAUJ,EAASiB,KAAMZ,YAAY,KAJzD,sBAYJ,6BACE,6BACGH,EACCD,EACA,CAAEG,WAAUC,eACZsB,KAAI,SAACC,GAAD,OACJ,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBA1EvB,GAAyBC,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5c9bcbb6.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    case SortType.ALPABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSort = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  handleReverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render(): React.ReactNode {\n    const { sortType, isReversed } = this.state;\n\n    const isIntialState = (sortType === SortType.NONE)\n      && !isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info', {\n              'is-light': this.state.sortType !== SortType.ALPABET,\n            })}\n            onClick={() => this.handleSort(SortType.ALPABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success', {\n              'is-light': this.state.sortType !== SortType.LENGTH,\n            })}\n            onClick={() => this.handleSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning', {\n              'is-light': !this.state.isReversed,\n            })}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {!isIntialState && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                this.setState({ sortType: SortType.NONE, isReversed: false });\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(\n              goodsFromServer,\n              { sortType, isReversed },\n            ).map((good: string) => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}